from aiogram import Router, types
from aiogram.enums import ChatAction
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from kb import back_to_main_menu
from aiogram.types import BufferedInputFile
from common_functions import main_log
import os

router = Router(name=__name__)


@router.message(Command('help'))
async def command_help_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    main_log(message=message)
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    await message.answer(f"–Ø —Å–µ—Ç–µ–≤–æ–π –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Å–µ—Ç–µ–≤—ã–º –∏–Ω–∂–µ–Ω–µ—Ä–∞–º\n"
                         f"–í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:\n"
                         f"- üßæ <b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–æ MAC –ê–¥—Ä–µ—Å—É</b>\n"
                         f"- üßÆ <b>IP –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</b>\n"
                         f"- ‚ÜîÔ∏è <b>–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ë–∏—Ç –∏ –ë–∞–π—Ç</b>\n"
                         f"- ‚úâÔ∏è <b>ping</b>\n"
                         f"–∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ \n\n\n"
                         f"–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–Ω—è –Ω–∞–∂–º–∏ /start\n"
                         f"–î–ª—è –û—Ç–º–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –Ω–∞–∂–º–∏—Ç–µ /cancel –∏–ª–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É\n"
                         f"–ö–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä \n"
                         f"–ø–æ–∫–∞ –≤—ã –Ω–µ –Ω–∞–∂–º–µ—Ç–µ /cancel\n"
                         f"–∏–ª–∏ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é",
                         reply_markup=back_to_main_menu)


@router.message(Command('get_id'))
async def command_get_id(message: Message, state: FSMContext) -> None:
    await state.clear()
    main_log(message=message)
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    await message.answer(f'–¢–≤–æ–π –¢–µ–ª–µ–≥—Ä–∞–º–º ID - {message.from_user.id}')


@router.message(Command('cancel'))
async def command_get_id(message: Message, state: FSMContext) -> None:
    main_log(message=message)
    if await state.get_state() is None:
        await message.bot.send_chat_action(chat_id=message.chat.id,
                                           action=ChatAction.TYPING)
        await message.answer(f'–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è ‚ö†Ô∏è\n\n'
                             f'–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –≤—ã–∑–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é')
    else:
        await state.clear()
        await message.bot.send_chat_action(chat_id=message.chat.id,
                                           action=ChatAction.TYPING)
        await message.answer(f'–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚õîÔ∏è\n\n\n'
                             f'–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')


@router.message(Command('get_log'))
async def command_get_log(message: Message, state: FSMContext) -> None:
    await state.clear()
    main_log(message=message)
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    log = open('/root/.virtualenvs/sysadmin_bot/sysadmin_bot/sysadmins.txt', 'rb').read()
    document = BufferedInputFile(log, filename="log.txt")
    if message.chat.id == 643541689:
        await message.bot.send_document(message.chat.id, document=document)
    else:
        await message.answer('–¢–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ ‚õîÔ∏è')


class Send_message_to_all(StatesGroup):
    the_message = State()
    user_list = State()


list_of_users = []
message_to_users = []


@router.message(Command('send_mes'))
async def command_send_message(message: Message, state: FSMContext) -> None:
    await state.clear()
    await state.set_state(Send_message_to_all.the_message)
    if message.chat.id == 643541689:
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ \n'
                             '–∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:')
    else:
        await message.answer('–¢–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ ‚õîÔ∏è')


@router.message(Send_message_to_all.the_message,
                ~Command('help', 'start', 'get_id', 'chat_gpt', 'cancel', 'get_log'))
async def command_send_message_next(message: Message, state: FSMContext) -> None:
    message_to_users.append(message.text)
    message_to_users.append(message.entities)
    await state.set_state(Send_message_to_all.user_list)
    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π \n'
                         '–∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n'
                         '–¢–µ–ª–µ–≥—Ä–∞–º ID –≤ —Å—Ç–æ–ª–±–∏–∫:')


@router.message(Send_message_to_all.user_list,
                ~Command('help', 'start', 'get_id', 'chat_gpt', 'cancel', 'get_log'))
async def command_send_message_next_to(message: Message, state: FSMContext) -> None:
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    list_of_users.append(message.text.split('\n'))
    bad_users = []
    for user in list_of_users[0]:
        try:
            await message.bot.send_message(chat_id=int(user), text=message_to_users[0],
                                           entities=message_to_users[1], parse_mode=None
                                           )
        except:
            print(user)
            bad_users.append(f'{user}\n')
    if bad_users == []:
        await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!')
    else:
        bad_users = '\n'.join(bad_users)
        await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!\n'
                             '–ö—Ä–æ–º–µ:\n'
                             f'<b>{bad_users}</b>'
                             f'\n'
                             f'<b>–û–Ω–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –±–æ—Ç!</b>')
    list_of_users.clear()
    message_to_users.clear()
    await state.clear()
